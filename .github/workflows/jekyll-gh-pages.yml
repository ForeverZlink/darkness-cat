name: Deploy React App to GitHub Pages

on:
  push:
    branches:
      - main # O workflow será acionado quando houver um push para a branch 'main'

  # Permite executar o workflow manualmente na aba "Actions" do GitHub
  workflow_dispatch:

# Define as permissões para o GITHUB_TOKEN
permissions:
  contents: read
  pages: write
  id-token: write # Necessário para o actions/deploy-pages@v4

# Permite apenas um deploy simultâneo, cancelando execuções enfileiradas se houver uma em progresso
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Job de construção (Build)
  build:
    runs-on: ubuntu-latest # O job será executado em uma máquina Ubuntu
    steps:
      - name: Checkout repository # Passo para clonar o repositório
        uses: actions/checkout@v4

      - name: Set up Node.js # Passo para configurar o ambiente Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18' # Define a versão do Node.js a ser utilizada

      - name: Install dependencies # Passo para instalar as dependências do projeto React
        run: npm install

      - name: Build React App # Passo para construir o aplicativo React para produção
        run: npm run build # Este comando gera a pasta 'build'

      - name: Upload artifact # Passo para fazer upload da pasta 'build' como um artefato
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./build # O diretório de saída do build do React que será publicado

  # Job de Deploy
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }} # O URL final da página
    runs-on: ubuntu-latest
    needs: build # Este job depende que o job 'build' tenha sido concluído com sucesso
    steps:
      - name: Deploy to GitHub Pages # Passo para fazer o deploy usando a action oficial do GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 # Usa a action oficial de deploy do GitHub Pages
